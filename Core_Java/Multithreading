import java.util.Scanner;

class Article extends Thread {
    private String line;
    private int count;

    // Default constructor
    public Article() {}

    // Parameterized constructor
    public Article(String line) {
        this.line = line;
    }

    // Getter and Setter for line
    public String getLine() {
        return line;
    }

    public void setLine(String line) {
        this.line = line;
    }

    // Getter and Setter for count
    public int getCount() {
        return count;
    }

    public void setCount(int count) {
        this.count = count;
    }

    // Method to count articles in the line
    @Override
    public void run() {
        count = countArticles(line);
    }

    // Helper method to count articles in a line
    private int countArticles(String line) {
        // Define articles to look for
        String[] articles = {"a", "an", "the"};
        int articleCount = 0;
        // Split the line into words
        String[] words = line.toLowerCase().split("\\s+");
        // Count occurrences of articles
        for (String word : words) {
            for (String article : articles) {
                if (word.equals(article)) {
                    articleCount++;
                }
            }
        }
        return articleCount;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter the number of lines");
        int n = Integer.parseInt(scanner.nextLine());

        Article[] articles = new Article[n];

        for (int i = 0; i < n; i++) {
            System.out.println("Enter line " + (i + 1));
            String line = scanner.nextLine();
            articles[i] = new Article(line);
            articles[i].start(); // Start the thread
        }

        int totalCount = 0;

        // Wait for all threads to complete
        for (Article article : articles) {
            try {
                article.join(); // Wait for the thread to finish
                totalCount += article.getCount(); // Add the count from each thread
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }

        System.out.println("There are " + totalCount + " articles in the given input");
    }
}
